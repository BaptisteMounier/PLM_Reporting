*** TODO
* Bibliographie
- Base PLM
 - https://github.com/oster/PLM
- Fork PLM
 - https://github.com/BaptisteMounier/PLM
- Base WebPLM
 - https://github.com/MatthieuNICOLAS/webPLM
- Fork WebPLM
 - https://github.com/BaptisteMounier/webPLM
- Base Blockly
 - https://github.com/google/blockly
* Journal
** 9 avril
*** Activité
- Finition installation de l'environnement de travail (dépôt, ,fork, pull, gcc...)
- Début des mofications de l'existant pour tester de quoi fait quoi et où
- Conférence sur la sécurité informatique
- Début des tentatives d'ajout de Blockly comme un nouveau langage dans la liste
 - Création classe PLM/src/plm/core/lang/LangBlockly.java
*** Problème
- Ajout du "langage" Blockly dans la base du projet, PLM de base (en cours de réalisation) ou ajout à partir de la version web ?
- Taille maximal de l'image du langage (j'ai ajouté une image de 5 ko alors que les images actuelles font au maximum 1 ko) ?
- Liaison entre les deux projets sur lesquels j'ai effectué des fork/branches automatique ou paramétrages à effectuer ?
*** Objectif
- Ajouter Blockly dans la liste des langages
- Permettre la selection de Blockly dans la liste des langages
- Modification de l'affichage de la zone du code pour laisser la place à Blockly
- Se pencher sur la correspondance entre l'exercice en cours avec ses langages supportés et Blockly
- Regarder comment récupérer le code généré par Blockly (probablement en python mais à définir)
** 8 avril
*** Activité
- Documentation
 - Syntaxe programmes en C, Phyton, Scala
- Etude de l'existant
 - WebPLM, Structure du projet
- Outils actuels intéressant pour Blockly (https://developers.google.com/blockly/)
 - Resizable, permettant de donner une taille dynamique par rapport à la page
 - Toolbox, permettant de créer des catégories de block (dans le menu)
 - Block Factory, permettant de créer ses propres blocks (dans le cas de la création d'un fonction pour par un enseignant un exercice)
 - Generate JavaScript, traduisant les blocks en js et qui l'execute
 - JS Interpreter, traduction en js et execution pas à pas avec notification du block en cours
 - Code Editor : traduction des blocks en js ou Python ou Dart ou XML
*** Problème
- Ajout potentiellement possible : définir un nombre maximum de block
- Où mettre la fenêtre de Blockly ?
 - Dans un onglet au même niveau que Resultat et Logs afin de pouvoir voir le code et les blocks en même temps
 - Dans une nouvelle zone mais qui risque de réduire la taille dédiée aux autres
 - Entre le code et le résultat
 - Avec Monde et Objectif dans un autre onglet
*** Objectif
- Test de fonctionnement des différents outils déjà existants pour les associer pour un rendu les comprennants
- Chercher un moyen de passer du code à la création de blocks
** 7 avril
*** Activité
- Création dépot de Reporting
- Réalisation des cours sur Angular.JS de Code School
- Première exploration de Blockly (documentation et code source sur GitHub)
- Exploration de l'implémentation actuelle de PLM
*** Problème
- Rendu de l'ajout de Blockly
 - Blockly comme un language (dans le menu au même titre que java, scala...)
 - En supplément de la zone où s'affiche les commandes (avec l'un ou l'autre ou les deux modifiables et mise à jour du second)
*** Objectif
- Regarder le retour de Blockly (language, forme)
- Rechercher une liaison réalisable entre Blockly et PLM
