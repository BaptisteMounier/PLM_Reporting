*** TODO
* Bibliographie
- [[https://github.com/oster/PLM][Base PLM]]
- [[https://github.com/BaptisteMounier/PLM][Fork PLM]]
- [[https://github.comb.com/matthieunicolas/webPLM][Base WebPLM]]
- [[https://github.com/BaptisteMounier/webPLM][Fork WebPLM]]
- [[https://github.com/google/blockly][Base Blockly]]
* Utilisation
** WebPLM
- Ce reporting fait réference à [[https://github.com/BaptisteMounier/webPLM][Fork WebPLM]], ce projet est une version de [[https://github.comb.com/matthieunicolas/webPLM][Base WebPLM]] utilisant [[https://github.com/google/blockly][Base Blockly]] comme un langages de programmation. Il utilise [[https://www.playframework.com/][Play Framework]] en Back-end et [[https://angularjs.org/][AngularJS]] en front-end.
** Démarrage
- Il est d'abord nécessaire d'[[https://www.playframework.com/documentation/2.3.x/Installing][installer Play Framework]]
- Puis de cloner le dépôt [[https://github.com/BaptisteMounier/webPLM][Fork WebPLM]]
  - git clone https://github.com/BaptisteMounier/webPLM.git
- Il faut ensuite lancer le serveur
  - cd path/webPLM
  - activator start
- Enfin d'accèder au site web
  - http://localhost:9000
* Journal
** 24 avril
*** Activité
*** Problème
*** Objectif
- [ ] Lier Blockly avec l'exercice en cours
- [ ] Gestion du stockage du code généré
- [ ] Générer un schéma Blockly à partir d'un code Python
** 23 avril
*** Activité
- Création et utilisation des variables et fonctions de l'utilisateur
*** Problème
*** Objectif
- [X] Création de tous les blocks nécessaires à PLM
- [X] Générer le code du schéma Blockly
- [ ] Lier Blockly avec l'exercice en cours
- [ ] Gestion du stockage de code généré
- [ ] Générer un schéma Blockly à partir d'un code Python
** 22 avril
*** Activité
- Ajuster le code généré
  - Réalisation de l'exercice Moria possible à l'aide de Blockly
- Permettre à l'utilisateur de créer son propre block fonction
*** Problème
- L'ajout des blocks créés par l'utilisateur dans le menu de block de
  gauche
*** Objectif
- [ ] Création de tous les blocks nécessaires à PLM
  - Ajout automatique des variables fonctions crées par l'utilisateur
- [ ] Générer le code du schéma Blockly
  - Utilisation des blocks créés par l'utilisateur
- [ ] Lier Blockly avec l'exercice en cours
- [ ] Gestion du stockage du code généré
- [ ] Générer un schéma Blockly à partir d'un code Python
** 21 avril
*** Activité
- Génération du code depuis Blockly
- Réalisation de l'exercice par le code fournis par Blockly
- Création de tous les blocks nécessaires à la leçon "Welcome"
*** Problème
- Ajout de "99," à la fin du code généré pour chaque block lié
*** Objectif
- [X] Mettre en place tous les blocks d'un exercice (Moria, Welcome)
- [ ] Création de tous les blocks nécessaire à PLM
  - Ajout automatique des variables et fonctions créées par l'utilisateur
- [ ] Générer le code du schéma Blockly
  - Nettoyer le code
  - Variables et fonctions créées par l'utilisateur
- [ ] Lier BLockly avec l'exercice en cours
- [ ] Gestion du stockage du code généré
- [ ] Générer un schéma Blockly à partir d'un code Python
** 20 avril
*** Activité
- Création d'un début de base de block
  - Basé pour le moment sur l'exercice Moria
  - Génération de code python pour chaque block ajouté
*** Problème
- La génération pose encore quelques problèmes
  - Erreur js levées
  - Retour chariot dans la chaine de caractère formée
*** Objectif
- [X] Rendre immédiat l'affichage de Blockly à sa sélection
- [ ] Mettre en place tous les blocs d'un exercice
  - Choix de l'exercice Moria de la leçon Welcome
- [ ] Création de tous les blocks nécessaire à PLM
- [ ] Générer le code du schéma Blockly
  - Corriger les problèmes liés à la génération du code
- [ ] Lier Blockly avec l'exercice en cours
- [ ] Gestion du stockage du code généré
- [ ] Générer un schéma Blockly à partir d'un code Python
** 17 avril
*** Activité
- Limitation de la taille de blockly pour éviter un agrandissement de
  la fenêtre à chaque action
- Ajout de bloquly dans la liste des langages
- Ajout de quelques nouveaux blocs de test
*** Problème
- Blockly n'apparait qu'après avoir modifier la taille de la fenêtre web
  - Problème à éclaircir
*** Objectif
- [X] Modification de l'ajout de l'interface de Blockly
- [X] Lier Blockly avec la page web
- [ ] Rendre immédiat l'affichage de blockly à sa sélection
- [ ] Mettre en place tous les blocs d'un exercice
  - Afin de pouvoir continuer l'ajout complet de blockly pour une situation
- [ ] Création de tous les blocks nécessaire à PLM
  - Séparation de leur ajout dans la liste disponible suivant l'exercice en cours
- [ ] Générer le code du schéma Blockly
  - Execution de l'exercice
- [ ] Lier Blockly avec l'exercice en cours
- [ ] Gestion du stockage du code généré
- [ ] Générer un schéma Blockly à partir d'un code Python
** 16 avril
*** Activité
- Mise en place de blockly avec AngularJS en m'appuyant sur la
  réalisation de cdjackson
  - Séparation de .service .provider .config .directive
    - Pour rester dans la structure du projet existant
  - Non fonctionnelle pour le moment
*** Problème
*** Objectif
- [ ] Modification de l'ajout de l'interface de Blockly
  - Finir l'extraction de la iframe vers un état stable
- [ ] Lier Blockly avec la page web
  - Run => Génération de code
- [ ] Générer le code du schéma Blockly
- [ ] Lier Blockly avec l'exercice en cours
  - Limiter les blocks disponbles
- [ ] Générer un schéma Blockly à partir d'un code Python
** 15 avril
*** Activité
- Test pour extraire Blockly de la iframe pour une implentation en
  passant par une directive/service
  - Configuration direct, sans jongler avec les getteur/setteur de la
    iframe et de la page direct
  - Plus "propre" à mon sens
  - Utilisation de services d'AngularJS
*** Problème
- Fonctionnement des outils AngularJS mal connus
- Liaison concrète entre les fonctions codées et celles existantes de
  Blockly encore flou
*** Objectif
- [ ] Modification de l'ajout de l'interface de Blockly
  - Finir l'extraction de la iframe vers un état stable
- [ ] Lier Blockly avec la page web
  - Run => Génération de code
- [ ] Générer le code du schèma Blockly
- [ ] Lier Blockly avec l'exercice en cours
  - Limiter les blocks disponibles
- [ ] Générer un schéma Blockly à partir d'un code Python
** 14 avril
*** Activité
- Affichage de l'interface Blockly
- Retouche image et code de la base plm pour Blockly
  - Mauvaise taille image
*** Problème
- Lien entre Angularjs et Blockly à approfondir
*** Objectif
- [X] Permettre la selection de Blockly dans la liste des langages
- [ ] Modification de l'ajout de l'interface de Blockly
  - A mettre dans des fichiers extérieur et jouer avec les appels plutôt que de le mettre en dure dans l'html afin de simplifier la "confiuration" de Blockly
- [ ] Regarder comment récupérer le code généré par Blockly
  - Générer du code Python à envoyer au serveur lors des executions de l'éditeur de source à travers Blockly
- [ ] Se pencher sur la corredpondance entre l'exercice en cours avec ses langages supportées et Blockly
- [ ] Générer un schéma Blockly à partir d'un code Python
** 13 avril
*** Activité
- Création d'un langage Blockly (code en python)
- Son ajout dans les listes de langages disponibles pour quelques
  exercices
- Affichage du code correspondant dans l'éditeur de source
- Ajout nouveau .jar dans le webPLM
- Documentation
 - CodeMirror
 - Blockly
 - Implémentation actuelle
*** Problème
- L'élément Blockly dans la liste des langages disponible n'est pas à
  la même taille que les autres langages
- Situation de l'ajout d'un nouvel exercice avec Blockly disponible ?
*** Objectif
- [X] Ajouter Blockly dans la liste des langages
- [ ] Permettre la selection de Blockly dans la liste des langages
  - Remplacer l'aspect de l'éditeur de source actuel par l'interface de
  Blockly lorsqu'on sélectionne Blockly comme langage
  - Création de blocs correspondant aux fonctions déjà fournis par
    l'enseignant
- [ ] Regarder comment récupérer le code généré par Blockly (probablement en Python mais à définir)
  - Générer du code Python à envoyer au serveur lors des executions de l'éditeur de source à travers Blockly
- [ ] Se pencher sur la correspondance entre l'exercice en cours avec ses langages supportées et Blockly
- [ ] Générer un schéma Blockly à partir d'un code Python
** 10 avril
*** Activité
- Suite des modifications pour l'ajout de Blockly en langage disponible
- Corrections de divers problèmes pour repartir sur une base saine et
  fonctionnelle
*** Problème
- Commandes dans le fichier ant incompatible avec mon l'environement
  windows actuel
- Précédentes modifications réalisées sur un fork de la mauvaise
  branche du projet PLM
*** Objectif
- [ ] Ajouter Blockly dans la liste des langages
  - Refaire les modifications des classes LangBlockly et Game
- [ ] Permettre la selection de Blockly dans la liste des langages
  - Ajouter Blockly comme langage pour un seul exercice
  - Création de nouveaux fichiers en .blockly dupliqués des .py pour commencer
- [ ] Regarder comment récupérer le code généré par Blockly (probablement en Python mais à définir) 
- [ ] Se pencher sur la correspondance entre l'exercice en cours avec ses langages supportées et Blockly
- [ ] Générer un schéma Blockly à partir d'un code python
** 9 avril
*** Activité
- Finition installation de l'environnement de travail (dépôt, fork, pull, gcc...)
- Début des mofications de l'existant pour tester de quoi fait quoi et où
- Conférence sur la sécurité informatique
- Début des tentatives d'ajout de Blockly comme un nouveau langage
  dans la liste
  - Création classe PLM/src/plm/core/lang/LangBlockly.java
  - Modification classe PLM/src/plm/core/model/Game.java
*** Problème
- Ajout du "langage" Blockly dans la base du projet, PLM de base (en
  cours de réalisation) ou ajout à partir de la version web ?
  - Version web
- Taille maximal de l'image du langage (j'ai ajouté une image de 5 ko
  alors que les images actuelles font au maximum 1 ko) ?
  - Pas de problème
- Liaison entre les deux projets sur lesquels j'ai effectué des
  fork/branches automatique ou paramétrages à effectuer ?
*** Objectif
- [X] Test de fonctionnement des différents outils déjà existants pour les associer pour un rendu les comprennants
  - Principes intéressants mis en oeuvres dans les démos de Blockly (iFrame, Toolbox, Code Editor, Block Factory)
- [ ] Ajouter Blockly dans la liste des langages
- [ ] Permettre la selection de Blockly dans la liste des langages
- [ ] Modification de l'affichage de la zone du code pour laisser la place à Blockly
- [ ] Regarder comment récupérer le code généré par Blockly (probablement en python mais à définir)
- [ ] Se pencher sur la correspondance entre l'exercice en cours avec ses langages supportés et Blockly
- [ ] Créer des Blocks à partir d'un morceau de code
** 8 avril
*** Activité
- Documentation
  - Syntaxe programmes en C, Phyton, Scala
- Etude de l'existant
  - WebPLM, Structure du projet
- Outils actuels intéressant pour Blockly (https://developers.google.com/blockly/)
  - Resizable, permettant de donner une taille dynamique par rapport à la page
  - Toolbox, permettant de créer des catégories de block (dans le menu)
  - Block Factory, permettant de créer ses propres blocks (dans le cas
    de la création d'un fonction pour par un enseignant un exercice)
  - Generate JavaScript, traduisant les blocks en js et qui l'execute
  - JS Interpreter, traduction en js et execution pas à pas avec
    notification du block en cours
  - Code Editor : traduction des blocks en js ou Python ou Dart ou XML
*** Problème
- Ajout potentiellement possible : définir un nombre maximum de block
- Où mettre la fenêtre de Blockly ?
  - Dans un onglet au même niveau que Resultat et Logs afin de pouvoir
    voir le code et les blocks en même temps
  - Dans une nouvelle zone mais qui risque de réduire la taille dédiée
    aux autres
  - Entre le code et le résultat
  - Avec Monde et Objectif dans un autre onglet
    - A la place de l'éditeur de source actuel
*** Objectif
- [X] Regarder le retour de Blockly (langague, forme)
  - Choix porté sur une génération en Python
- [X] Chercher une liaison réalisable entre Blockly et PLM
  - Insérer Blockly comme un "langage" classique
- [ ] Test de fonctionnement des différents outils déjà existants pour les associer pour un rendu les comprennants
- [ ] Créer des Blocks à partir d'un morceau de code
** 7 avril
*** Activité
- Création dépot de Reporting
- Réalisation des cours sur Angular.JS de Code School
- Première exploration de Blockly (documentation et code source sur
  GitHub)
- Exploration de l'implémentation actuelle de PLM
*** Problème
- Rendu de l'ajout de Blockly
 - Blockly comme un language (dans le menu au même titre que java, scala...)
 - En supplément de la zone où s'affiche les commandes (avec l'un ou
   l'autre ou les deux modifiables et mise à jour du second)
*** Objectif
- [ ] Regarder le retour de Blockly (language, forme)
- [ ] Rechercher une liaison réalisable entre Blockly et PLM
